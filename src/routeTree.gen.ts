/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkRouteImport } from './routes/work'
import { Route as ExperienceRouteImport } from './routes/experience'
import { Route as EducationRouteImport } from './routes/education'
import { Route as IndexRouteImport } from './routes/index'

const WorkRoute = WorkRouteImport.update({
  id: '/work',
  path: '/work',
  getParentRoute: () => rootRouteImport,
} as any)
const ExperienceRoute = ExperienceRouteImport.update({
  id: '/experience',
  path: '/experience',
  getParentRoute: () => rootRouteImport,
} as any)
const EducationRoute = EducationRouteImport.update({
  id: '/education',
  path: '/education',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/work': typeof WorkRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/work': typeof WorkRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/education': typeof EducationRoute
  '/experience': typeof ExperienceRoute
  '/work': typeof WorkRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/education' | '/experience' | '/work'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/education' | '/experience' | '/work'
  id: '__root__' | '/' | '/education' | '/experience' | '/work'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EducationRoute: typeof EducationRoute
  ExperienceRoute: typeof ExperienceRoute
  WorkRoute: typeof WorkRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/work': {
      id: '/work'
      path: '/work'
      fullPath: '/work'
      preLoaderRoute: typeof WorkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/experience': {
      id: '/experience'
      path: '/experience'
      fullPath: '/experience'
      preLoaderRoute: typeof ExperienceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/education': {
      id: '/education'
      path: '/education'
      fullPath: '/education'
      preLoaderRoute: typeof EducationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EducationRoute: EducationRoute,
  ExperienceRoute: ExperienceRoute,
  WorkRoute: WorkRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
